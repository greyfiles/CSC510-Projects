Criteria,Score,Comments
Workload_Dist,2,Commits were made by all group members. There are members who committed more than some others and a few that barely changed anything at all.
Commits,2,369 Total - They seem to be relatively small and easy to keep track of
Unique_Committers,1,All members committed but some didn't commit much. The commit heavy members all about evenly had around 30 - 40
Issue_Reports,3,36 Total - They clearly used the feature
Issues_Closed,3,32 Total - Indicitive of solving issues but only the ones that matter
Doc_Quality,2,Formattng is good and clear but relatively plain and uninteresting
Func/Class_Desc,0,None aside from inline comments in the code
Tutorials,1,Only video playing describes use. Also the description of how to just send an api call for results is detailed
Doc_Storytelling,2,Does provide justification for why you might want to use it and tries to be convincing
Project_Videos,2,Included a video but not very convincing
Version_Control,3,Git
Style_Checkers,3,
Code_Formatters,3,
Syntax_Checkers,3,
Code_Coverage,3,
Other_Tools,0,No evidence of any
Test_Cases,3,Present and appear to be of quality
Routine_Tests,3,
CONTRIBUTING_Guide,3,Included and sufficiently detailed
Issue_Discussions,3,
Chat_Channel,0,None in Github that I can see
Failing_Case_Issues,0,Issues aren't related to a failing test
Team_Tool_Usage,3,
Repo_Configs,3,
Team_System_Knowledge,0,Not really able to score because I can't ask for their knowledge
Team_Code_Contrib,3,
Release_Cycles,0,Only single version (1.0.0) mentioned anywhere
Documentation_Video,1,Short GIF instead of a video
Does your website and documentation provide a clear, high-level overview of your software?,Yes,
Does your website and documentation clearly describe the type of user who should use your software?,No,
Do you publish case studies to show how your software has been used by yourself and others?,No,
Is the name of your project/software unique?,No,
Is your project/software name free from trademark violations?,No,
Is your software available as a package that can be deployed without building it?,No,
Is your software available for free?,Yes,
Is your source code publicly available to download, either as a downloadable bundle or via access to a source code repository?,Yes,
Is your software hosted in an established, third-party repository likeGitHub (https://github.com), BitBucket (https://bitbucket.org),LaunchPad (https://launchpad.net) orSourceForge (https://sourceforge.net)?,Yes,
Is your documentation clearly available on your website or within your software?,Yes,
Does your documentation include a "quick start" guide, that provides a short overview of how to use your software with some basic examples of use?,No,
If you provide more extensive documentation, does this provide clear, step-by-step instructions on how to deploy and use your software?,No,
Do you provide a comprehensive guide to all your software's commands, functions and options?,No,
Do you provide troubleshooting information that describes the symptoms and step-by-step solutions for problems and error messages?,No,
If your software can be used as a library, package or service by other software, do you provide comprehensive API documentation?,No,
Do you store your documentation under revision control with your source code?,Yes,
Do you publish your release history e.g. release data, version numbers, key features of each release etc. on your web site or in your documentation?,Yes,
Does your software describe how a user can get help with using your software?,No,
Does your website and documentation describe what support, if any, you provide to users and developers?,No,
Does your project have an e-mail address or forum that is solely for supporting users?,Yes,
Are e-mails to your support e-mail address received by more than one person?,No,
Does your project have a ticketing system to manage bug reports and feature requests?,No,
Is your project's ticketing system publicly visible to your users, so they can view bug reports and feature requests?,No,
Is your software's architecture and design modular?,No,
Does your software use an accepted coding standard or convention?,Yes,
Does your software allow data to be imported and exported using open data formats?,No,
Does your software allow communications using open communications protocols?,No,
Is your software cross-platform compatible?,Yes,
Does your software adhere to appropriate accessibility conventions or standards?,No,
Does your documentation adhere to appropriate accessibility conventions or standards?,No,
Is your source code stored in a repository under revision control?,Yes,
Is each source code release a snapshot of the repository?,Yes,
Are releases tagged in the repository?,No,
Is there a branch of the repository that is always stable? (i.e. tests always pass, code always builds successfully),No,
Do you back-up your repository?,No,
Do you provide publicly-available instructions for building your software from the source code?,Yes,
Can you build, or package, your software using an automated tool?,Yes,
Do you provide publicly-available instructions for deploying your software?,Yes,
Does your documentation list all third-party dependencies?,No,
Does your documentation list the version number for all third-party dependencies?,No,
Does your software list the web address, and licences for all third-party dependencies and say whether the dependencies are mandatory or optional?,No,
Can you download dependencies using a dependency management tool or package manager?,Yes,
Do you have tests that can be run after your software has been built or deployed to show whether the build or deployment has been successful?,Yes,
Do you have an automated test suite for your software?,Yes,
Do you have a framework to periodically (e.g. nightly) run your tests on the latest version of the source code?,Yes,
Do you use continuous integration, automatically running tests whenever changes are made to your source code?,No,
Are your test results publicly visible?,No,
Are all manually-run tests documented?,No,
Does your project have resources (e.g. blog, Twitter, RSS feed, Facebook page, wiki, mailing list) that are regularly updated with information about your software?,No,
Does your website state how many projects and users are associated with your project?,No,
Do you provide success stories on your website?,No,
Do you list your important partners and collaborators on your website?,No,
Do you list your project's publications on your website or link to a resource where these are available?,No,
Do you list third-party publications that refer to your software on your website or link to a resource where these are available?,No,
Can users subscribe to notifications to changes to your source code repository?,No,
If your software is developed as an open source project (and, not just a project developing open source software), do you have a governance model?,No,
Do you accept contributions (e.g. bug fixes, enhancements, documentation updates, tutorials) from people who are not part of your project?,Yes,
Do you have a contributions policy?,Yes,
Is your contributions' policy publicly available?,Yes,
Do contributors keep the copyright/IP of their contributions?,Yes,
Does your website and documentation clearly state the copyright owners of your software and documentation?,Yes,
Does each of your source code files include a copyright statement?,No,
Does your website and documentation clearly state the licence of your software?,Yes,
Is your software released under an open source licence?,Yes,
Is your software released under an OSI-approved open-source licence?,Yes,
Does each of your source code files include a licence header?,No,
Do you have a recommended citation for your software?,No,
Does your website or documentation include a project roadmap (a list of project and development milestones for the next 3, 6 and 12 months)?,Yes,
Does your website or documentation describe how your project is funded, and the period over which funding is guaranteed?,No,
Do you make timely announcements of the deprecation of components, APIs, etc.?,No,
